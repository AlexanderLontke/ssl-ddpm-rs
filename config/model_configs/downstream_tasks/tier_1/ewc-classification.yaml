name: &NAME rs-ddpm-ms-classification-gallen
seed: 42
device: &DEVICE cuda
monitor: &MONITOR "val/f1"
monitor_mode: &MONITOR_MODE "max"
target_key: &TARGET_KEY "multiclass_one_h"
num_labels: &NUM_LABELS 11
image_size: &IMAGE_SIZE 128
ewc_labels: &EWC_LABELS ["Tree cover", "Shrubland", "Grassland", "Cropland", "Built-up", "Bare", "Snow and Ice", "Permanenet water bodies", "Herbaceous wetland", "Mangroves", "Moss and lichen" ]

label_pipeline:
  *TARGET_KEY:
    - module: ffcv.transforms.ToTensor

downstream_task_specific_feature_extractor_kwargs:
  feature_section: "middle"
  feature_levels: [ 0 ]
  vectorize_output: True


# METRICS
metrics_args: &METRICS_KWARGS
  task: "multilabel"
  num_labels: *NUM_LABELS
  threshold: 0.5
classwise_metrics_kwargs: &CW_METRICS_KWARGS
  task: "multilabel"
  num_labels: *NUM_LABELS
  threshold: 0.5
  average: null

train_metrics: &TRAIN_METRICS
  accuracy:
    module: torchmetrics.Accuracy
    kwargs: *METRICS_KWARGS
  recall:
    module: torchmetrics.Recall
    kwargs: *METRICS_KWARGS
  precision:
    module: torchmetrics.Precision
    kwargs: *METRICS_KWARGS
  f1:
    module: torchmetrics.F1Score
    kwargs: *METRICS_KWARGS
  classwise_accuracy:
    module: torchmetrics.ClasswiseWrapper
    kwargs:
      metric:
        module: torchmetrics.Accuracy
        kwargs: *CW_METRICS_KWARGS
      labels: *EWC_LABELS
  classwise_recall:
    module: torchmetrics.ClasswiseWrapper
    kwargs:
      metric:
        module: torchmetrics.Recall
        kwargs: *CW_METRICS_KWARGS
      labels: *EWC_LABELS
  classwise_precision:
    module: torchmetrics.ClasswiseWrapper
    kwargs:
      metric:
        module: torchmetrics.Precision
        kwargs: *CW_METRICS_KWARGS
      labels: *EWC_LABELS
  classwise_f1:
    module: torchmetrics.ClasswiseWrapper
    kwargs:
      metric:
        module: torchmetrics.F1Score
        kwargs: *CW_METRICS_KWARGS
      labels: *EWC_LABELS

validation_metrics: &VALIDATION_METRICS
  accuracy:
    module: torchmetrics.Accuracy
    kwargs: *METRICS_KWARGS
  recall:
    module: torchmetrics.Recall
    kwargs: *METRICS_KWARGS
  precision:
    module: torchmetrics.Precision
    kwargs: *METRICS_KWARGS
  f1:
    module: torchmetrics.F1Score
    kwargs: *METRICS_KWARGS
  classwise_accuracy:
    module: torchmetrics.ClasswiseWrapper
    kwargs:
      metric:
        module: torchmetrics.Accuracy
        kwargs: *CW_METRICS_KWARGS
      labels: *EWC_LABELS
  classwise_recall:
    module: torchmetrics.ClasswiseWrapper
    kwargs:
      metric:
        module: torchmetrics.Recall
        kwargs: *CW_METRICS_KWARGS
      labels: *EWC_LABELS
  classwise_precision:
    module: torchmetrics.ClasswiseWrapper
    kwargs:
      metric:
        module: torchmetrics.Precision
        kwargs: *CW_METRICS_KWARGS
      labels: *EWC_LABELS
  classwise_f1:
    module: torchmetrics.ClasswiseWrapper
    kwargs:
      metric:
        module: torchmetrics.F1Score
        kwargs: *CW_METRICS_KWARGS
      labels: *EWC_LABELS

# MODEL INSTANTIATION
pl_module:
  module: remote_sensing_ddpm.downstream_tasks.lit_downstream_task.LitDownstreamTask
  kwargs:
    learning_rate: 0.0001
    loss:
      module: torch.nn.CrossEntropyLoss
    target_key: *TARGET_KEY
    training_metrics: *TRAIN_METRICS
    validation_metrics: *VALIDATION_METRICS
    downstream_model:
      module: remote_sensing_ddpm.downstream_tasks.downstream_task_model.DownstreamTaskModel
      kwargs:
        downstream_layer:
          module: remote_sensing_ddpm.downstream_tasks.models.non_linear_head.NonLinearHead
          kwargs:
            input_size: 65536
            output_size: *NUM_LABELS


# MODEL TRAINING
pl_trainer:
  accelerator: gpu
  max_epochs: 20
  log_every_n_steps: 1
  precision: "16-mixed"
  # gradient_clip_algorithm: "norm"
  enable_checkpointing: True
  # UNCOMMENT FOR DEBUGGING
  # fast_dev_run: True

pl_wandb_logger:
  project: *NAME

pl_checkpoint_callback:
  monitor: *MONITOR
  mode: *MONITOR_MODE
  save_top_k: 3
  save_last: True

# custom_callbacks:
#   - module: pytorch_lightning.callbacks.EarlyStopping
#     kwargs:
#       patience: 5
#       monitor: *MONITOR
#       mode: *MONITOR_MODE